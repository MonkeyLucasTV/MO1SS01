#include <iostream>
#include <cmath>
#include <string>
#include <fstream>
#include <time.h>
#include "IRClientUDP.h"
#include "IRLigne.h"
#include "IRJournalLumineux.h"
#include <sstream>

void chiffrement(std::string message, std::string & messageChiffre)
{
 std::string cle = "CyberSecurite";
 for(int i = 0 ; i<message.length() ; i++)
 {
 messageChiffre[i] = message[i] ^ cle[i%cle.length()];
 }
}

using namespace std;
int main()
{

std::string trameChiffree = trame;




	int choix;
	double sum;
	int val1;
	int val2;
	char operateur;
	int x = 1;


 while(true){

      cout << "Dites votre truc" << '\n';
	cin >> val1 >> operateur >> val2;

   ofstream fichierlog;
	fichierlog.open("journal.log", ios_base::app);
	time_t t = time(0);
	tm* now = localtime(&t);
	fichierlog << now->tm_mday << "/" << (now->tm_mon + 1) << "/" << (now->tm_year + 1900) << " " << now-> tm_hour<< ":"<<now-> tm_min<<":"<<now -> tm_sec<< " " <<val1<< " "<<operateur<< " "<<val2 ;

		switch(operateur){

		case '+':
			sum = val1+val2;
			cout << sum << '\n';
			cout << "FIN DU PROGRAMME CALCULATRICE SANS ERREUR"<< '\n';
			fichierlog<<" = "<<sum<<'\n';
			break;
		case '-':
			sum = val1-val2;
			cout << sum << '\n';
			cout << "FIN DU PROGRAMME CALCULATRICE SANS ERREUR"<< '\n';
			fichierlog<<" = "<<sum<<'\n';
			break;
		case '*':
			sum = val1*val2;
			cout << sum << '\n';
			cout << "FIN DU PROGRAMME CALCULATRICE SANS ERREUR"<< '\n';
			fichierlog<<" = "<<sum<<'\n';
			break;
		case '/':
			sum = val1/val2;
			cout << sum << '\n';
			cout << "FIN DU PROGRAMME CALCULATRICE SANS ERREUR"<< '\n';
			fichierlog<<" = "<<sum<<'\n';
			break;
		case '%':
			sum = val1 % val2;
			cout << sum << '\n';
			cout << "FIN DU PROGRAMME CALCULATRICE SANS ERREUR"<< '\n';
			fichierlog<<" = "<<sum<<'\n';
			break;
		default:
			cout << "mauvais operateur";
            return -1;
		}

       fichierlog.close();







   // Création de la chaine de caractère à envoyer à l'afficheur

	std::stringstream ss;
	ss << val1 << " " << operateur << " " << val2 << " = " << sum;
	std::string operation = ss.str();
    cout <<ss.str()<<endl;
	string msg;

      IRLigne ligne;
		ligne.ModifierMessage(operation);
		string trame = ligne.Trame();

     std::string trameChiffree = trame;
	chiffrement(trame, trameChiffree);
	 std::cout << "TRAME CHIFFREE : " << trameChiffree << std::endl;



	IRClientUDP client;
		client.OuvrirLaSocketDeCommunication("172.20.21.157",4000);
		client.EnvoyerUnMessage(trame);
		client.FermerLaSocket();

       }

	}












